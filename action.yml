name: "Run ComfyUI on Various OSs"
description: "Run a comfyui workflow on various OSs"
inputs:
  os:
    description: "Operating System. macos, linux, windows."
    required: true
    default: ""
  cuda_version:
    description: "CUDA Version. Will be used in the conda install command for pytorch. 11.8 or 12.1. Only valid when os is linux or windows."
    required: false
    default: "12.1"
  models-json:
    description: 'JSON string containing models and their download URLs. The models will be downloaded into the exact directory relative to /ComfyUI/models/. eg { "model_name": { url: "https://example.com/model.pth", "directory": "checkpoints" } }'
    required: true
  workflow_name:
    description: "Name of the workflow to run. This is used to identify the workflow in the logs."
    required: true
  workflow_json_path:
    description: "Path (relative to the root of the Github repo) of the Workflow JSON to run. Must be API format JSON."
    required: true
  timeout:
    description: "Timeout for the workflow (in seconds)"
    required: false
    default: "600"
runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        update-environment: false
        python-version: 3.11

    - name: Run macOS specific actions
      if: ${{ inputs.os == 'macos' }}
      uses: ./mac-action.yml
      with:
        models-json: ${{ inputs.models-json }}
        workflow_name: ${{ inputs.workflow_name }}
        workflow_json_path: ${{ inputs.workflow_json_path }}
        timeout: ${{ inputs.timeout }}

    - name: Run linux specific actions
      if: ${{ inputs.os == 'linux' }}
      uses: ./linux-action.yml
      with:
        cuda_version: ${{ inputs.cuda_version }}
        models-json: ${{ inputs.models-json }}
        workflow_name: ${{ inputs.workflow_name }}
        workflow_json_path: ${{ inputs.workflow_json_path }}
        timeout: ${{ inputs.timeout }}
    
    - name: Run Windows specific actions
      if: ${{ inputs.os == 'windows' }}
      uses: ./windows-action.yml
      with:
        cuda_version: ${{ inputs.cuda_version }}
        models-json: ${{ inputs.models-json }}
        workflow_name: ${{ inputs.workflow_name }}
        workflow_json_path: ${{ inputs.workflow_json_path }}
        timeout: ${{ inputs.timeout }}

    - name: Upload Output Files
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: output-files-${{ github.job }}-${{ inputs.os }}-${{inputs.workflow_name}}-${{ github.run_id }}
        path: ${{ github.workspace }}/output/**

    - name: Upload log file
      uses: actions/upload-artifact@v4
      if: ${{ success() || failure() }}
      with:
        name: app-logs-${{ github.job }}-${{ inputs.os }}-${{inputs.workflow_name}}-${{ github.run_id }}
        path: ${{ github.workspace }}/application.log
    
    # - name: Call API to upload artifact details
    #   shell: bash
    #   run: |
    #       curl -X POST "http://staging.api.drip.art/upload-artifact" \
    #       -H "Content-Type: application/json" \
    #       -d '{
    #         "repo": "${{ github.repository }}",
    #         "job_id": ${{ github.job }}',
    #         "run_id": "${{ github.run_id }}",
    #         "os": "${{ inputs.os }}",
    #         "cuda_version": "${{ inputs.cuda_version }}",
    #         "artifact_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts",
    #         "commit_hash": "${{ github.sha }}",
    #         "branch_name": "${{ github.ref_name }}"
    #       }'
